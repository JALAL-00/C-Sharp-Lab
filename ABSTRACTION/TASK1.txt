
using System;


public abstract class Shape
{
    public string name { set; get; }

    public abstract void GetArea();
    public abstract void point();

}

public class Circle : Shape
{
    public double radius { set; get; }

    public override void GetArea()
    {

        Console.WriteLine("The Area of Circle: " + radius * radius * 3.14);
    }

    public override void point()
    {
        Console.WriteLine("Circle has infinite points");
    }

}

public class Rectangle : Shape
{

    public double length { set; get; }
    public double width { set; get; }

    public override void GetArea()
    {
        Console.WriteLine("The area of rectangle: " + length * width);
    }
    public override void point()
    {
        Console.WriteLine("Rectangle has 4 points");
    }
}


namespace Polymorphism
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Circle c1 = new Circle();
            Rectangle r1 = new Rectangle();
            c1.radius = 15;
            r1.length = 5;
            r1.width = 3;

            c1.GetArea();
            c1.point();
            r1.GetArea();
            r1.point();


            Console.ReadKey();
        }
    }
}
